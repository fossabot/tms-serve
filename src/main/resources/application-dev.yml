server:
  port: 8080
  servlet:
    context-path: /api/
spring:
  application:
    name: tms-serve
  http:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  datasource:
    url: jdbc:postgresql://localhost:5432/tms-serve
    username: postgres
    password: 123456
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          time_zone: UTC
          batch-size: 100
          generate_statistics: true
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
  ## quartz config
  quartz:
    job-store-type: jdbc
    properties:
      org:
        quartz:
          scheduler:
            instanceName: tms-quartz-app
            instanceId: AUTO
          threadPool:
            threadCount: 20
          jobStore:
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
            useProperties: false
            misfireThreshold: 6000
            tablePrefix: qrtz_
            isClustered: false
          plugin:
            shutdownHook:
              class: org.quartz.plugins.management.ShutdownHookPlugin
              cleanShutdown: true
  mvc:
    throw-exception-if-no-handler-found: true
logging:
  config: "classpath:log4j2-spring.xml"
email:
  send:
    from: doanhai8080@gmail.com
storage-service:
  cdn-storage-name: /tmp/dev/images/
  exports-storage-name: /tmp/dev/imports/
  cdn-url: https://${storage-service.cdn-storage-name}\.${cloud.aws.region.static}\.amazonaws.com/
auth:
  token:
    admin:
      access-expire: 99999999
      refresh-expire: 99999999
    customer:
      access-expire: 99999999
      refresh-expire: 99999999
cloud:
  aws:
    credentials:
      accessKey: <<your aws accesskey>>
      secretKey: <<your aws secretkey>>
    region:
      static: ap-southeast-1